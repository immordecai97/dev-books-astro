const _astro_dataLayerContent = [["Map",1,2,7,8],"meta::meta",["Map",3,4,5,6],"astro-version","5.8.0","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{\"SHOW_BUY_BUTTON\":{\"context\":\"server\",\"access\":\"public\",\"type\":\"boolean\"},\"SCORE_API_ENDPOINT\":{\"context\":\"client\",\"access\":\"public\",\"type\":\"string\"}},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","books",["Map",9,10,31,32,53,54,75,76],"aprendiendo-git",{id:9,data:11,body:20,filePath:21,digest:22,rendered:23,legacyId:30},{title:12,author:13,img:14,readtime:15,description:16,buy:17},"Aprendiendo Git y GitHub","Miguel Ángel Durán","aprendiendo-git.jpg",224,"Aprende a usar Git y GitHub para gestionar tus proyectos de código.",{spain:18,usa:19},"https://amzn.to/4e3MYLG","https://www.amazon.com/-/es/Miguel-%C3%81ngel-Dur%C3%A1n-Garc%C3%ADa/dp/B0D2LPMG6F","Hoy en día es imposible imaginar el desarrollo de software sin Git. **Según la encuesta de Stack Overflow de 2018, casi el 90% de los desarrolladores usaban Git para manejar su código fuente**. Si te preguntas por qué no hay encuestas más recientes... ¡Es simplemente porque no preguntaron más! Su dominio empezaba a ser tan evidente que no dejaba margen a la curiosidad.\r\n\r\nSiendo tan importante entender Git, su manejo y dominio, he decidido escribir este libro. **Un libro que yo mismo hubiera estado encantado de leer cuándo empecé.** Un libro del que estoy seguro que podrás extraer algún aprendizaje y que te podrá servir de guía en el futuro.\r\n\r\nEn el libro te explico los orígenes de Git y por qué ahora lo usa todo el mundo. ¿De dónde nació? ¿Quién lo creó? Además, te explico todos sus fundamentos para que entiendas qué es lo que esconden todos los comando que utilizas en tu día a día.\r\n\r\nDespués de ayudarte a instalar y configurar Git, **te explicaré cómo puedes trabajar en Git de forma local y remota y qué diferencias existe entre esos dos modos.** Luego haremos repaso de algunas buenas prácticas, cómo usar los alias, los hooks, trucos imprescindibles y muchas cosas más.","src/content/books/aprendiendo-git.md","438a3d16ddcb871c",{html:24,metadata:25},"<p>Hoy en día es imposible imaginar el desarrollo de software sin Git. <strong>Según la encuesta de Stack Overflow de 2018, casi el 90% de los desarrolladores usaban Git para manejar su código fuente</strong>. Si te preguntas por qué no hay encuestas más recientes… ¡Es simplemente porque no preguntaron más! Su dominio empezaba a ser tan evidente que no dejaba margen a la curiosidad.</p>\n<p>Siendo tan importante entender Git, su manejo y dominio, he decidido escribir este libro. <strong>Un libro que yo mismo hubiera estado encantado de leer cuándo empecé.</strong> Un libro del que estoy seguro que podrás extraer algún aprendizaje y que te podrá servir de guía en el futuro.</p>\n<p>En el libro te explico los orígenes de Git y por qué ahora lo usa todo el mundo. ¿De dónde nació? ¿Quién lo creó? Además, te explico todos sus fundamentos para que entiendas qué es lo que esconden todos los comando que utilizas en tu día a día.</p>\n<p>Después de ayudarte a instalar y configurar Git, <strong>te explicaré cómo puedes trabajar en Git de forma local y remota y qué diferencias existe entre esos dos modos.</strong> Luego haremos repaso de algunas buenas prácticas, cómo usar los alias, los hooks, trucos imprescindibles y muchas cosas más.</p>",{headings:26,localImagePaths:27,remoteImagePaths:28,frontmatter:11,imagePaths:29},[],[],[],[],"aprendiendo-git.md","learning-typescript",{id:31,data:33,body:42,filePath:43,digest:44,rendered:45,legacyId:52},{title:34,author:35,img:36,readtime:37,description:38,buy:39},"Learning TypeScript","Josh Goldberg","learning-typescript.jpg",301,"Domina TypeScript de 0 a experto",{spain:40,usa:41},"https://amzn.to/3zlkdes","https://www.amazon.com/-/es/Josh-Goldberg/dp/1098110331","TypeScript has conquered the world of JavaScript: it is one of the world's fastest growing and most popular languages across developer surveys, widely used in consumer and business companies alike, and frequently credited for helping massive web applications scale. But what is TypeScript?\r\n\r\nHow does it work, why does it work, and how can we use it? Learning TypeScript takes beginner to intermediate JavaScript programmers from knowing nothing about \"types\" or a \"type system\" to full mastery of the fundamentals of TypeScript. It's more than a means to find bugs and typos--it's a useful system for declaring the way our JavaScript should work and helping us stick to it.\r\n\r\nYou'll learn how TypeScript: interacts with JavaScript analyzes and understands code augments your existing development pattern helps you document your code works with IDEs to provide refactoring tools assists local development in refactoring code helps you develop more quickly with fewer bugs","src/content/books/learning-typescript.md","490111f9f931732a",{html:46,metadata:47},"<p>TypeScript has conquered the world of JavaScript: it is one of the world’s fastest growing and most popular languages across developer surveys, widely used in consumer and business companies alike, and frequently credited for helping massive web applications scale. But what is TypeScript?</p>\n<p>How does it work, why does it work, and how can we use it? Learning TypeScript takes beginner to intermediate JavaScript programmers from knowing nothing about “types” or a “type system” to full mastery of the fundamentals of TypeScript. It’s more than a means to find bugs and typos—it’s a useful system for declaring the way our JavaScript should work and helping us stick to it.</p>\n<p>You’ll learn how TypeScript: interacts with JavaScript analyzes and understands code augments your existing development pattern helps you document your code works with IDEs to provide refactoring tools assists local development in refactoring code helps you develop more quickly with fewer bugs</p>",{headings:48,localImagePaths:49,remoteImagePaths:50,frontmatter:33,imagePaths:51},[],[],[],[],"learning-typescript.md","programador-pragmatico",{id:53,data:55,body:64,filePath:65,digest:66,rendered:67,legacyId:74},{title:56,author:57,img:58,readtime:59,description:60,buy:61},"Programador Pragmatico","Marco de Paula","programador-pragmatico.jpg",344,"Un libro clásico para mejorar en programación",{spain:62,usa:63},"https://amzn.to/3BaK8WQ","https://www.amazon.com/-/es/Andrew-Hunt/dp/020161622X","El programador pragmático es uno de esos raros casos de libros técnicos que se leen, se releen y se vuelven a leer durante años. Tanto si es nuevo en el campo como si es un profesional experimentado, acabará encontrando ideas nuevas cada vez.\r\n\r\nDave Thomas y Andy Hunt escribieron la primera edición de este libro tan influyente en 1999 para ayudar a sus clientes a crear software mejor y a redescubrir el placer de escribir código. Estas lecciones han ayudado a una generación de programadores a examinar la propia esencia del desarrollo de software, independientemente de cualquier lenguaje, framework o metodología en particular, y la filosofía pragmática ha sido el germen de cientos de libros, screencasts y audiolibros, además de miles de carreras e historias de éxito.","src/content/books/programador-pragmatico.md","9a8748381062cc0f",{html:68,metadata:69},"<p>El programador pragmático es uno de esos raros casos de libros técnicos que se leen, se releen y se vuelven a leer durante años. Tanto si es nuevo en el campo como si es un profesional experimentado, acabará encontrando ideas nuevas cada vez.</p>\n<p>Dave Thomas y Andy Hunt escribieron la primera edición de este libro tan influyente en 1999 para ayudar a sus clientes a crear software mejor y a redescubrir el placer de escribir código. Estas lecciones han ayudado a una generación de programadores a examinar la propia esencia del desarrollo de software, independientemente de cualquier lenguaje, framework o metodología en particular, y la filosofía pragmática ha sido el germen de cientos de libros, screencasts y audiolibros, además de miles de carreras e historias de éxito.</p>",{headings:70,localImagePaths:71,remoteImagePaths:72,frontmatter:55,imagePaths:73},[],[],[],[],"programador-pragmatico.md","refactoring",{id:75,data:77,body:86,filePath:87,digest:88,rendered:89,legacyId:96},{title:78,author:79,img:80,readtime:81,description:82,buy:83},"Refactoring","Martin Fowler","refactoring.jpg",355,"Buenas prácticas para refactorizar código",{spain:84,usa:85},"https://amzn.to/3XLYZ2H","https://www.amazon.com/-/es/Martin-Fowler/dp/0321336380","Martin Fowler’s guide to reworking bad code into well-structured code\r\n\r\nRefactoring improves the design of existing code and enhances software maintainability, as well as making existing code easier to understand. Original Agile Manifesto signer and software development thought leader, Martin Fowler, provides a catalog of refactorings that explains why you should refactor; how to recognize code that needs refactoring; and how to actually do it successfully, no matter what language you use.","src/content/books/refactoring.md","9ff1d5a544e54a48",{html:90,metadata:91},"<p>Martin Fowler’s guide to reworking bad code into well-structured code</p>\n<p>Refactoring improves the design of existing code and enhances software maintainability, as well as making existing code easier to understand. Original Agile Manifesto signer and software development thought leader, Martin Fowler, provides a catalog of refactorings that explains why you should refactor; how to recognize code that needs refactoring; and how to actually do it successfully, no matter what language you use.</p>",{headings:92,localImagePaths:93,remoteImagePaths:94,frontmatter:77,imagePaths:95},[],[],[],[],"refactoring.md"];

export { _astro_dataLayerContent as default };
